version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./core:/app/core/
      - ./goals:/app/goals/
      - ./todolist:/app/todolist/

  migrations:
    build:
      context: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
    image: postgres:15.4
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 3s
      retries: 10
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  bot:
    build: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./bot:/app/bot/
    command: python manage.py runbot

volumes:
  postgres_data: